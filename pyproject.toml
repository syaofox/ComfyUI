[project]
name = "ComfyUI"
version = "0.3.66"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"

dependencies = [
   "accelerate>=1.2.1",
   "addict>=2.4.0",
   "aiohttp>=3.11.8",
   "albumentations>=1.4.16",
   "alembic>=1.16.5",
   "av>=14.2.0",
   "color-matcher>=0.6.0",
   "comfyui-embedded-docs==0.3.0",
   "comfyui-frontend-package==1.27.10",
   "comfyui-workflow-templates==0.1.95",
   "cupy-wheel>=12.3.0",
   "diffusers>=0.33.0",
   "dill>=0.4.0",
   "einops>=0.8.1",
   "filelock>=3.19.1",
   "ftfy>=6.3.1",
   "fvcore>=0.1.5.post20221221",
   "gguf>=0.17.1",
   "groundingdino-py>=0.4.0",
   "huggingface-hub>=0.19.0",
   "hydra-core>=1.3.0",
   "imageio-ffmpeg>=0.5.1",
   "importlib-metadata>=8.7.0",
   "insightface==0.7.3",
   "iopath>=0.1.9",
   "kornia>=0.7.1",
   "librosa==0.10.2",
   "lmdb>=1.4.1",
   "matplotlib>=3.9.4",
   "mediapipe>=0.10.14",
   "moviepy>=2.2.1",
   "mss>=10.1.0",
   "numpy>=1.25.0",
   "omegaconf>=2.3.0",
   "onnx>=1.14.0",
   "onnxruntime>=1.15.0",
   "onnxruntime-gpu>=1.15.0",
   "onnxruntime-gpu>=1.20.2 ; platform_machine == 'x86_64' and sys_platform != 'darwin'",
   "opencv-contrib-python>=4.11.0.86",
   "opencv-python>=4.7.0",
   "opencv-python-headless>=4.11.0.86",
   "peft>=0.17.0",
   "pillow>=10.3.0",
   "protobuf>=3.20.2,<6.0.0",
   "psutil>=7.1.0",
   "pydantic~=2.0",
   "pydantic-settings~=2.0",
   "pyloudnorm>=0.1.1",
   "python-dateutil>=2.9.0.post0",
   "pyyaml>=6.0.3",
   "rich>=13.7.1",
   "safetensors>=0.4.2",
   "sageattention>=1.0.6",
   "scikit-image>=0.24.0",
   "scikit-learn>=1.6.1",
   "scipy>=1.13.1",
   "segment-anything>=1.0",
   "sentencepiece>=0.2.0",
   "soundfile>=0.13.1",
   "spandrel>=0.4.1",
   "sqlalchemy>=2.0.43",
   "svglib>=1.6.0",
   "timm>=1.0.7",
   "tokenizers>=0.13.3",
   "torch>=2.8.0",
   "torchaudio>=2.3.0",
   "torchsde>=0.2.6",
   "torchvision>=0.23.0",
   "tqdm>=4.67.1",
   "transformers>=4.37.2",
   "translators>=6.0.1",
   "transparent-background>=1.1.2",
   "trimesh[easy]>=4.8.3",
   "tyro==0.8.5",
   "ultralytics>=8.3.203",
   "yacs>=0.1.8",
   "yapf>=0.43.0",
   "yarl>=1.18.0",
]

[project.urls]
homepage = "https://www.comfy.org/"
repository = "https://github.com/comfyanonymous/ComfyUI"
documentation = "https://docs.comfy.org/"

[tool.ruff]
lint.select = [
  "N805", # invalid-first-argument-name-for-method
  "S307", # suspicious-eval-usage
  "S102", # exec
  "T",    # print-usage
  "W",
  # The "F" series in Ruff stands for "Pyflakes" rules, which catch various Python syntax errors and undefined names.
  # See all rules here: https://docs.astral.sh/ruff/rules/#pyflakes-f
  "F",
]
exclude = ["*.ipynb", "**/generated/*.pyi"]

[tool.pylint]
master.py-version = "3.9"
master.extension-pkg-allow-list = [
  "pydantic",
]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "missing-module-docstring",
  "missing-class-docstring",
  "missing-function-docstring",
  "line-too-long",
  "too-few-public-methods",
  "too-many-public-methods",
  "too-many-instance-attributes",
  "too-many-positional-arguments",
  "broad-exception-raised",
  "too-many-lines",
  "invalid-name",
  "unused-argument",
  "broad-exception-caught",
  "consider-using-with",
  "fixme",
  "too-many-statements",
  "too-many-branches",
  "too-many-locals",
  "too-many-arguments",
  "duplicate-code",
  "abstract-method",
  "superfluous-parens",
  "arguments-differ",
  "redefined-builtin",
  "unnecessary-lambda",
  "dangerous-default-value",
  "invalid-overridden-method",
  # next warnings should be fixed in future
  "bad-classmethod-argument",  # Class method should have 'cls' as first argument
  "wrong-import-order",  # Standard imports should be placed before third party imports
  "ungrouped-imports",
  "unnecessary-pass",
  "unnecessary-lambda-assignment",
  "no-else-return",
  "unused-variable",
]

[tool.uv.sources]
torch = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]
torchvision = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]
torchaudio = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true
